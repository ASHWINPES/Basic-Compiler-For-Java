Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> PUBLIC CLASS NAME { main_body }
Rule 2     start -> PRIVATE CLASS NAME { main_body }
Rule 3     start -> PROTECTED CLASS NAME { main_body }
Rule 4     start -> CLASS NAME { main_body }
Rule 5     start -> main_body
Rule 6     main_body -> PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body }
Rule 7     main_body -> body
Rule 8     body -> statements
Rule 9     statements -> statements statement
Rule 10    statements -> <empty>
Rule 11    statement -> DO { statements } WHILE ( expression ) ;
Rule 12    else_if -> ELSE IF ( expression ) { statements } else_if
Rule 13    else_if -> ELSE IF ( expression ) statement else_if
Rule 14    else_if -> ELSE { statements }
Rule 15    else_if -> ELSE statement
Rule 16    else_if -> <empty>
Rule 17    statement -> IF ( expression ) { statements } else_if
Rule 18    statement -> IF ( expression ) statement else_if
Rule 19    statement -> INT NAME ;
Rule 20    statement -> FLOAT NAME ;
Rule 21    statement -> BOOLEAN NAME ;
Rule 22    statement -> NAME = expression ;
Rule 23    statement -> INT NAME = expression ;
Rule 24    statement -> FLOAT NAME = expression ;
Rule 25    statement -> BOOLEAN NAME = TRUE ;
Rule 26    statement -> BOOLEAN NAME = FALSE ;
Rule 27    statement -> expression ;
Rule 28    expression -> TRUE
Rule 29    expression -> FALSE
Rule 30    expression -> expression + expression
Rule 31    expression -> expression - expression
Rule 32    expression -> expression * expression
Rule 33    expression -> expression / expression
Rule 34    expression -> expression > expression
Rule 35    expression -> expression < expression
Rule 36    expression -> expression REL_EQ expression
Rule 37    expression -> expression REL_NEQ expression
Rule 38    expression -> expression REL_GTEQ expression
Rule 39    expression -> expression REL_LTEQ expression
Rule 40    statement -> NAME MINEQ expression ;
Rule 41    statement -> NAME PLUSEQ expression ;
Rule 42    statement -> NAME DIVEQ expression ;
Rule 43    statement -> NAME MULEQ expression ;
Rule 44    expression -> ! expression
Rule 45    expression -> - expression
Rule 46    expression -> ( expression )
Rule 47    expression -> NUMBER
Rule 48    expression -> NAME

Terminals, with rules where they appear

!                    : 44
(                    : 6 11 12 13 17 18 46
)                    : 6 11 12 13 17 18 46
*                    : 32
+                    : 30
-                    : 31 45
/                    : 33
;                    : 11 19 20 21 22 23 24 25 26 27 40 41 42 43
<                    : 35
=                    : 22 23 24 25 26
>                    : 34
ARGS                 : 6
BOOLEAN              : 21 25 26
CLASS                : 1 2 3 4
DIVEQ                : 42
DO                   : 11
ELSE                 : 12 13 14 15
FALSE                : 26 29
FLOAT                : 20 24
IF                   : 12 13 17 18
INT                  : 19 23
MAIN                 : 6
MINEQ                : 40
MULEQ                : 43
NAME                 : 1 2 3 4 19 20 21 22 23 24 25 26 40 41 42 43 48
NUMBER               : 47
PLUSEQ               : 41
PRIVATE              : 2
PROTECTED            : 3
PUBLIC               : 1 6
REL_EQ               : 36
REL_GTEQ             : 38
REL_LTEQ             : 39
REL_NEQ              : 37
STATIC               : 6
STRING               : 6
TRUE                 : 25 28
VOID                 : 6
WHILE                : 11
error                : 
{                    : 1 2 3 4 6 11 12 14 17
}                    : 1 2 3 4 6 11 12 14 17

Nonterminals, with rules where they appear

body                 : 6 7
else_if              : 12 13 17 18
expression           : 11 12 13 17 18 22 23 24 27 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 41 42 43 44 45 46
main_body            : 1 2 3 4 5
start                : 0
statement            : 9 13 15 18
statements           : 8 9 11 12 14 17

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . PUBLIC CLASS NAME { main_body }
    (2) start -> . PRIVATE CLASS NAME { main_body }
    (3) start -> . PROTECTED CLASS NAME { main_body }
    (4) start -> . CLASS NAME { main_body }
    (5) start -> . main_body
    (6) main_body -> . PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body }
    (7) main_body -> . body
    (8) body -> . statements
    (9) statements -> . statements statement
    (10) statements -> .

    PUBLIC          shift and go to state 2
    PRIVATE         shift and go to state 5
    PROTECTED       shift and go to state 8
    CLASS           shift and go to state 6
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)
    $end            reduce using rule 10 (statements -> .)

    body                           shift and go to state 7
    statements                     shift and go to state 1
    main_body                      shift and go to state 3
    start                          shift and go to state 4

state 1

    (8) body -> statements .
    (9) statements -> statements . statement
    (11) statement -> . DO { statements } WHILE ( expression ) ;
    (17) statement -> . IF ( expression ) { statements } else_if
    (18) statement -> . IF ( expression ) statement else_if
    (19) statement -> . INT NAME ;
    (20) statement -> . FLOAT NAME ;
    (21) statement -> . BOOLEAN NAME ;
    (22) statement -> . NAME = expression ;
    (23) statement -> . INT NAME = expression ;
    (24) statement -> . FLOAT NAME = expression ;
    (25) statement -> . BOOLEAN NAME = TRUE ;
    (26) statement -> . BOOLEAN NAME = FALSE ;
    (27) statement -> . expression ;
    (40) statement -> . NAME MINEQ expression ;
    (41) statement -> . NAME PLUSEQ expression ;
    (42) statement -> . NAME DIVEQ expression ;
    (43) statement -> . NAME MULEQ expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    }               reduce using rule 8 (body -> statements .)
    $end            reduce using rule 8 (body -> statements .)
    DO              shift and go to state 22
    IF              shift and go to state 21
    INT             shift and go to state 9
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 13
    NAME            shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16

    expression                     shift and go to state 14
    statement                      shift and go to state 10

state 2

    (1) start -> PUBLIC . CLASS NAME { main_body }
    (6) main_body -> PUBLIC . STATIC VOID MAIN ( STRING ARGS ) { body }

    CLASS           shift and go to state 24
    STATIC          shift and go to state 23


state 3

    (5) start -> main_body .

    $end            reduce using rule 5 (start -> main_body .)


state 4

    (0) S' -> start .



state 5

    (2) start -> PRIVATE . CLASS NAME { main_body }

    CLASS           shift and go to state 25


state 6

    (4) start -> CLASS . NAME { main_body }

    NAME            shift and go to state 26


state 7

    (7) main_body -> body .

    }               reduce using rule 7 (main_body -> body .)
    $end            reduce using rule 7 (main_body -> body .)


state 8

    (3) start -> PROTECTED . CLASS NAME { main_body }

    CLASS           shift and go to state 27


state 9

    (19) statement -> INT . NAME ;
    (23) statement -> INT . NAME = expression ;

    NAME            shift and go to state 28


state 10

    (9) statements -> statements statement .

    DO              reduce using rule 9 (statements -> statements statement .)
    IF              reduce using rule 9 (statements -> statements statement .)
    INT             reduce using rule 9 (statements -> statements statement .)
    FLOAT           reduce using rule 9 (statements -> statements statement .)
    BOOLEAN         reduce using rule 9 (statements -> statements statement .)
    NAME            reduce using rule 9 (statements -> statements statement .)
    TRUE            reduce using rule 9 (statements -> statements statement .)
    FALSE           reduce using rule 9 (statements -> statements statement .)
    !               reduce using rule 9 (statements -> statements statement .)
    -               reduce using rule 9 (statements -> statements statement .)
    (               reduce using rule 9 (statements -> statements statement .)
    NUMBER          reduce using rule 9 (statements -> statements statement .)
    }               reduce using rule 9 (statements -> statements statement .)
    $end            reduce using rule 9 (statements -> statements statement .)


state 11

    (45) expression -> - . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 29

state 12

    (29) expression -> FALSE .

    ;               reduce using rule 29 (expression -> FALSE .)
    +               reduce using rule 29 (expression -> FALSE .)
    -               reduce using rule 29 (expression -> FALSE .)
    *               reduce using rule 29 (expression -> FALSE .)
    /               reduce using rule 29 (expression -> FALSE .)
    >               reduce using rule 29 (expression -> FALSE .)
    <               reduce using rule 29 (expression -> FALSE .)
    REL_EQ          reduce using rule 29 (expression -> FALSE .)
    REL_NEQ         reduce using rule 29 (expression -> FALSE .)
    REL_GTEQ        reduce using rule 29 (expression -> FALSE .)
    REL_LTEQ        reduce using rule 29 (expression -> FALSE .)
    )               reduce using rule 29 (expression -> FALSE .)


state 13

    (21) statement -> BOOLEAN . NAME ;
    (25) statement -> BOOLEAN . NAME = TRUE ;
    (26) statement -> BOOLEAN . NAME = FALSE ;

    NAME            shift and go to state 31


state 14

    (27) statement -> expression . ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               shift and go to state 40
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 15

    (20) statement -> FLOAT . NAME ;
    (24) statement -> FLOAT . NAME = expression ;

    NAME            shift and go to state 43


state 16

    (47) expression -> NUMBER .

    ;               reduce using rule 47 (expression -> NUMBER .)
    +               reduce using rule 47 (expression -> NUMBER .)
    -               reduce using rule 47 (expression -> NUMBER .)
    *               reduce using rule 47 (expression -> NUMBER .)
    /               reduce using rule 47 (expression -> NUMBER .)
    >               reduce using rule 47 (expression -> NUMBER .)
    <               reduce using rule 47 (expression -> NUMBER .)
    REL_EQ          reduce using rule 47 (expression -> NUMBER .)
    REL_NEQ         reduce using rule 47 (expression -> NUMBER .)
    REL_GTEQ        reduce using rule 47 (expression -> NUMBER .)
    REL_LTEQ        reduce using rule 47 (expression -> NUMBER .)
    )               reduce using rule 47 (expression -> NUMBER .)


state 17

    (44) expression -> ! . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 44

state 18

    (22) statement -> NAME . = expression ;
    (40) statement -> NAME . MINEQ expression ;
    (41) statement -> NAME . PLUSEQ expression ;
    (42) statement -> NAME . DIVEQ expression ;
    (43) statement -> NAME . MULEQ expression ;
    (48) expression -> NAME .

    =               shift and go to state 48
    MINEQ           shift and go to state 45
    PLUSEQ          shift and go to state 47
    DIVEQ           shift and go to state 49
    MULEQ           shift and go to state 46
    ;               reduce using rule 48 (expression -> NAME .)
    +               reduce using rule 48 (expression -> NAME .)
    -               reduce using rule 48 (expression -> NAME .)
    *               reduce using rule 48 (expression -> NAME .)
    /               reduce using rule 48 (expression -> NAME .)
    >               reduce using rule 48 (expression -> NAME .)
    <               reduce using rule 48 (expression -> NAME .)
    REL_EQ          reduce using rule 48 (expression -> NAME .)
    REL_NEQ         reduce using rule 48 (expression -> NAME .)
    REL_GTEQ        reduce using rule 48 (expression -> NAME .)
    REL_LTEQ        reduce using rule 48 (expression -> NAME .)


state 19

    (46) expression -> ( . expression )
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 50

state 20

    (28) expression -> TRUE .

    ;               reduce using rule 28 (expression -> TRUE .)
    +               reduce using rule 28 (expression -> TRUE .)
    -               reduce using rule 28 (expression -> TRUE .)
    *               reduce using rule 28 (expression -> TRUE .)
    /               reduce using rule 28 (expression -> TRUE .)
    >               reduce using rule 28 (expression -> TRUE .)
    <               reduce using rule 28 (expression -> TRUE .)
    REL_EQ          reduce using rule 28 (expression -> TRUE .)
    REL_NEQ         reduce using rule 28 (expression -> TRUE .)
    REL_GTEQ        reduce using rule 28 (expression -> TRUE .)
    REL_LTEQ        reduce using rule 28 (expression -> TRUE .)
    )               reduce using rule 28 (expression -> TRUE .)


state 21

    (17) statement -> IF . ( expression ) { statements } else_if
    (18) statement -> IF . ( expression ) statement else_if

    (               shift and go to state 51


state 22

    (11) statement -> DO . { statements } WHILE ( expression ) ;

    {               shift and go to state 52


state 23

    (6) main_body -> PUBLIC STATIC . VOID MAIN ( STRING ARGS ) { body }

    VOID            shift and go to state 53


state 24

    (1) start -> PUBLIC CLASS . NAME { main_body }

    NAME            shift and go to state 54


state 25

    (2) start -> PRIVATE CLASS . NAME { main_body }

    NAME            shift and go to state 55


state 26

    (4) start -> CLASS NAME . { main_body }

    {               shift and go to state 56


state 27

    (3) start -> PROTECTED CLASS . NAME { main_body }

    NAME            shift and go to state 57


state 28

    (19) statement -> INT NAME . ;
    (23) statement -> INT NAME . = expression ;

    ;               shift and go to state 59
    =               shift and go to state 58


state 29

    (45) expression -> - expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 45 (expression -> - expression .)
    +               reduce using rule 45 (expression -> - expression .)
    -               reduce using rule 45 (expression -> - expression .)
    *               reduce using rule 45 (expression -> - expression .)
    /               reduce using rule 45 (expression -> - expression .)
    >               reduce using rule 45 (expression -> - expression .)
    <               reduce using rule 45 (expression -> - expression .)
    REL_EQ          reduce using rule 45 (expression -> - expression .)
    REL_NEQ         reduce using rule 45 (expression -> - expression .)
    REL_GTEQ        reduce using rule 45 (expression -> - expression .)
    REL_LTEQ        reduce using rule 45 (expression -> - expression .)
    )               reduce using rule 45 (expression -> - expression .)

  ! +               [ shift and go to state 41 ]
  ! -               [ shift and go to state 37 ]
  ! *               [ shift and go to state 32 ]
  ! /               [ shift and go to state 39 ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 30

    (48) expression -> NAME .

    )               reduce using rule 48 (expression -> NAME .)
    +               reduce using rule 48 (expression -> NAME .)
    -               reduce using rule 48 (expression -> NAME .)
    *               reduce using rule 48 (expression -> NAME .)
    /               reduce using rule 48 (expression -> NAME .)
    >               reduce using rule 48 (expression -> NAME .)
    <               reduce using rule 48 (expression -> NAME .)
    REL_EQ          reduce using rule 48 (expression -> NAME .)
    REL_NEQ         reduce using rule 48 (expression -> NAME .)
    REL_GTEQ        reduce using rule 48 (expression -> NAME .)
    REL_LTEQ        reduce using rule 48 (expression -> NAME .)
    ;               reduce using rule 48 (expression -> NAME .)


state 31

    (21) statement -> BOOLEAN NAME . ;
    (25) statement -> BOOLEAN NAME . = TRUE ;
    (26) statement -> BOOLEAN NAME . = FALSE ;

    ;               shift and go to state 60
    =               shift and go to state 61


state 32

    (32) expression -> expression * . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 62

state 33

    (38) expression -> expression REL_GTEQ . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 63

state 34

    (36) expression -> expression REL_EQ . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 64

state 35

    (34) expression -> expression > . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 65

state 36

    (37) expression -> expression REL_NEQ . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 66

state 37

    (31) expression -> expression - . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 67

state 38

    (35) expression -> expression < . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 68

state 39

    (33) expression -> expression / . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 69

state 40

    (27) statement -> expression ; .

    ELSE            reduce using rule 27 (statement -> expression ; .)
    DO              reduce using rule 27 (statement -> expression ; .)
    IF              reduce using rule 27 (statement -> expression ; .)
    INT             reduce using rule 27 (statement -> expression ; .)
    FLOAT           reduce using rule 27 (statement -> expression ; .)
    BOOLEAN         reduce using rule 27 (statement -> expression ; .)
    NAME            reduce using rule 27 (statement -> expression ; .)
    TRUE            reduce using rule 27 (statement -> expression ; .)
    FALSE           reduce using rule 27 (statement -> expression ; .)
    !               reduce using rule 27 (statement -> expression ; .)
    -               reduce using rule 27 (statement -> expression ; .)
    (               reduce using rule 27 (statement -> expression ; .)
    NUMBER          reduce using rule 27 (statement -> expression ; .)
    $end            reduce using rule 27 (statement -> expression ; .)
    }               reduce using rule 27 (statement -> expression ; .)


state 41

    (30) expression -> expression + . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 70

state 42

    (39) expression -> expression REL_LTEQ . expression
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 71

state 43

    (20) statement -> FLOAT NAME . ;
    (24) statement -> FLOAT NAME . = expression ;

    ;               shift and go to state 73
    =               shift and go to state 72


state 44

    (44) expression -> ! expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 44 (expression -> ! expression .)
    +               reduce using rule 44 (expression -> ! expression .)
    -               reduce using rule 44 (expression -> ! expression .)
    *               reduce using rule 44 (expression -> ! expression .)
    /               reduce using rule 44 (expression -> ! expression .)
    >               reduce using rule 44 (expression -> ! expression .)
    <               reduce using rule 44 (expression -> ! expression .)
    REL_EQ          reduce using rule 44 (expression -> ! expression .)
    REL_NEQ         reduce using rule 44 (expression -> ! expression .)
    REL_GTEQ        reduce using rule 44 (expression -> ! expression .)
    REL_LTEQ        reduce using rule 44 (expression -> ! expression .)
    )               reduce using rule 44 (expression -> ! expression .)

  ! +               [ shift and go to state 41 ]
  ! -               [ shift and go to state 37 ]
  ! *               [ shift and go to state 32 ]
  ! /               [ shift and go to state 39 ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 45

    (40) statement -> NAME MINEQ . expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 74

state 46

    (43) statement -> NAME MULEQ . expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 75

state 47

    (41) statement -> NAME PLUSEQ . expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 76

state 48

    (22) statement -> NAME = . expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 77

state 49

    (42) statement -> NAME DIVEQ . expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 78

state 50

    (46) expression -> ( expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    )               shift and go to state 79
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 51

    (17) statement -> IF ( . expression ) { statements } else_if
    (18) statement -> IF ( . expression ) statement else_if
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 80

state 52

    (11) statement -> DO { . statements } WHILE ( expression ) ;
    (9) statements -> . statements statement
    (10) statements -> .

    }               reduce using rule 10 (statements -> .)
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)

    statements                     shift and go to state 81

state 53

    (6) main_body -> PUBLIC STATIC VOID . MAIN ( STRING ARGS ) { body }

    MAIN            shift and go to state 82


state 54

    (1) start -> PUBLIC CLASS NAME . { main_body }

    {               shift and go to state 83


state 55

    (2) start -> PRIVATE CLASS NAME . { main_body }

    {               shift and go to state 84


state 56

    (4) start -> CLASS NAME { . main_body }
    (6) main_body -> . PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body }
    (7) main_body -> . body
    (8) body -> . statements
    (9) statements -> . statements statement
    (10) statements -> .

    PUBLIC          shift and go to state 86
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)
    }               reduce using rule 10 (statements -> .)

    body                           shift and go to state 7
    statements                     shift and go to state 1
    main_body                      shift and go to state 85

state 57

    (3) start -> PROTECTED CLASS NAME . { main_body }

    {               shift and go to state 87


state 58

    (23) statement -> INT NAME = . expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 88

state 59

    (19) statement -> INT NAME ; .

    ELSE            reduce using rule 19 (statement -> INT NAME ; .)
    DO              reduce using rule 19 (statement -> INT NAME ; .)
    IF              reduce using rule 19 (statement -> INT NAME ; .)
    INT             reduce using rule 19 (statement -> INT NAME ; .)
    FLOAT           reduce using rule 19 (statement -> INT NAME ; .)
    BOOLEAN         reduce using rule 19 (statement -> INT NAME ; .)
    NAME            reduce using rule 19 (statement -> INT NAME ; .)
    TRUE            reduce using rule 19 (statement -> INT NAME ; .)
    FALSE           reduce using rule 19 (statement -> INT NAME ; .)
    !               reduce using rule 19 (statement -> INT NAME ; .)
    -               reduce using rule 19 (statement -> INT NAME ; .)
    (               reduce using rule 19 (statement -> INT NAME ; .)
    NUMBER          reduce using rule 19 (statement -> INT NAME ; .)
    $end            reduce using rule 19 (statement -> INT NAME ; .)
    }               reduce using rule 19 (statement -> INT NAME ; .)


state 60

    (21) statement -> BOOLEAN NAME ; .

    ELSE            reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    DO              reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    IF              reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    INT             reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    FLOAT           reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    BOOLEAN         reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    NAME            reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    TRUE            reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    FALSE           reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    !               reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    -               reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    (               reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    NUMBER          reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    $end            reduce using rule 21 (statement -> BOOLEAN NAME ; .)
    }               reduce using rule 21 (statement -> BOOLEAN NAME ; .)


state 61

    (25) statement -> BOOLEAN NAME = . TRUE ;
    (26) statement -> BOOLEAN NAME = . FALSE ;

    TRUE            shift and go to state 89
    FALSE           shift and go to state 90


state 62

    (32) expression -> expression * expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 32 (expression -> expression * expression .)
    +               reduce using rule 32 (expression -> expression * expression .)
    -               reduce using rule 32 (expression -> expression * expression .)
    *               reduce using rule 32 (expression -> expression * expression .)
    /               reduce using rule 32 (expression -> expression * expression .)
    >               reduce using rule 32 (expression -> expression * expression .)
    <               reduce using rule 32 (expression -> expression * expression .)
    REL_EQ          reduce using rule 32 (expression -> expression * expression .)
    REL_NEQ         reduce using rule 32 (expression -> expression * expression .)
    REL_GTEQ        reduce using rule 32 (expression -> expression * expression .)
    REL_LTEQ        reduce using rule 32 (expression -> expression * expression .)
    )               reduce using rule 32 (expression -> expression * expression .)

  ! +               [ shift and go to state 41 ]
  ! -               [ shift and go to state 37 ]
  ! *               [ shift and go to state 32 ]
  ! /               [ shift and go to state 39 ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 63

    (38) expression -> expression REL_GTEQ expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 38 (expression -> expression REL_GTEQ expression .)
    >               reduce using rule 38 (expression -> expression REL_GTEQ expression .)
    <               reduce using rule 38 (expression -> expression REL_GTEQ expression .)
    REL_EQ          reduce using rule 38 (expression -> expression REL_GTEQ expression .)
    REL_NEQ         reduce using rule 38 (expression -> expression REL_GTEQ expression .)
    REL_GTEQ        reduce using rule 38 (expression -> expression REL_GTEQ expression .)
    REL_LTEQ        reduce using rule 38 (expression -> expression REL_GTEQ expression .)
    )               reduce using rule 38 (expression -> expression REL_GTEQ expression .)
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39

  ! +               [ reduce using rule 38 (expression -> expression REL_GTEQ expression .) ]
  ! -               [ reduce using rule 38 (expression -> expression REL_GTEQ expression .) ]
  ! *               [ reduce using rule 38 (expression -> expression REL_GTEQ expression .) ]
  ! /               [ reduce using rule 38 (expression -> expression REL_GTEQ expression .) ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 64

    (36) expression -> expression REL_EQ expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 36 (expression -> expression REL_EQ expression .)
    REL_EQ          reduce using rule 36 (expression -> expression REL_EQ expression .)
    REL_NEQ         reduce using rule 36 (expression -> expression REL_EQ expression .)
    )               reduce using rule 36 (expression -> expression REL_EQ expression .)
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42

  ! +               [ reduce using rule 36 (expression -> expression REL_EQ expression .) ]
  ! -               [ reduce using rule 36 (expression -> expression REL_EQ expression .) ]
  ! *               [ reduce using rule 36 (expression -> expression REL_EQ expression .) ]
  ! /               [ reduce using rule 36 (expression -> expression REL_EQ expression .) ]
  ! >               [ reduce using rule 36 (expression -> expression REL_EQ expression .) ]
  ! <               [ reduce using rule 36 (expression -> expression REL_EQ expression .) ]
  ! REL_GTEQ        [ reduce using rule 36 (expression -> expression REL_EQ expression .) ]
  ! REL_LTEQ        [ reduce using rule 36 (expression -> expression REL_EQ expression .) ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]


state 65

    (34) expression -> expression > expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 34 (expression -> expression > expression .)
    >               reduce using rule 34 (expression -> expression > expression .)
    <               reduce using rule 34 (expression -> expression > expression .)
    REL_EQ          reduce using rule 34 (expression -> expression > expression .)
    REL_NEQ         reduce using rule 34 (expression -> expression > expression .)
    REL_GTEQ        reduce using rule 34 (expression -> expression > expression .)
    REL_LTEQ        reduce using rule 34 (expression -> expression > expression .)
    )               reduce using rule 34 (expression -> expression > expression .)
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39

  ! +               [ reduce using rule 34 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 34 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 34 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 34 (expression -> expression > expression .) ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 66

    (37) expression -> expression REL_NEQ expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 37 (expression -> expression REL_NEQ expression .)
    REL_EQ          reduce using rule 37 (expression -> expression REL_NEQ expression .)
    REL_NEQ         reduce using rule 37 (expression -> expression REL_NEQ expression .)
    )               reduce using rule 37 (expression -> expression REL_NEQ expression .)
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42

  ! +               [ reduce using rule 37 (expression -> expression REL_NEQ expression .) ]
  ! -               [ reduce using rule 37 (expression -> expression REL_NEQ expression .) ]
  ! *               [ reduce using rule 37 (expression -> expression REL_NEQ expression .) ]
  ! /               [ reduce using rule 37 (expression -> expression REL_NEQ expression .) ]
  ! >               [ reduce using rule 37 (expression -> expression REL_NEQ expression .) ]
  ! <               [ reduce using rule 37 (expression -> expression REL_NEQ expression .) ]
  ! REL_GTEQ        [ reduce using rule 37 (expression -> expression REL_NEQ expression .) ]
  ! REL_LTEQ        [ reduce using rule 37 (expression -> expression REL_NEQ expression .) ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]


state 67

    (31) expression -> expression - expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 31 (expression -> expression - expression .)
    +               reduce using rule 31 (expression -> expression - expression .)
    -               reduce using rule 31 (expression -> expression - expression .)
    >               reduce using rule 31 (expression -> expression - expression .)
    <               reduce using rule 31 (expression -> expression - expression .)
    REL_EQ          reduce using rule 31 (expression -> expression - expression .)
    REL_NEQ         reduce using rule 31 (expression -> expression - expression .)
    REL_GTEQ        reduce using rule 31 (expression -> expression - expression .)
    REL_LTEQ        reduce using rule 31 (expression -> expression - expression .)
    )               reduce using rule 31 (expression -> expression - expression .)
    *               shift and go to state 32
    /               shift and go to state 39

  ! *               [ reduce using rule 31 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 31 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 41 ]
  ! -               [ shift and go to state 37 ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 68

    (35) expression -> expression < expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 35 (expression -> expression < expression .)
    >               reduce using rule 35 (expression -> expression < expression .)
    <               reduce using rule 35 (expression -> expression < expression .)
    REL_EQ          reduce using rule 35 (expression -> expression < expression .)
    REL_NEQ         reduce using rule 35 (expression -> expression < expression .)
    REL_GTEQ        reduce using rule 35 (expression -> expression < expression .)
    REL_LTEQ        reduce using rule 35 (expression -> expression < expression .)
    )               reduce using rule 35 (expression -> expression < expression .)
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39

  ! +               [ reduce using rule 35 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 35 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 35 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 35 (expression -> expression < expression .) ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 69

    (33) expression -> expression / expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 33 (expression -> expression / expression .)
    +               reduce using rule 33 (expression -> expression / expression .)
    -               reduce using rule 33 (expression -> expression / expression .)
    *               reduce using rule 33 (expression -> expression / expression .)
    /               reduce using rule 33 (expression -> expression / expression .)
    >               reduce using rule 33 (expression -> expression / expression .)
    <               reduce using rule 33 (expression -> expression / expression .)
    REL_EQ          reduce using rule 33 (expression -> expression / expression .)
    REL_NEQ         reduce using rule 33 (expression -> expression / expression .)
    REL_GTEQ        reduce using rule 33 (expression -> expression / expression .)
    REL_LTEQ        reduce using rule 33 (expression -> expression / expression .)
    )               reduce using rule 33 (expression -> expression / expression .)

  ! +               [ shift and go to state 41 ]
  ! -               [ shift and go to state 37 ]
  ! *               [ shift and go to state 32 ]
  ! /               [ shift and go to state 39 ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 70

    (30) expression -> expression + expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 30 (expression -> expression + expression .)
    +               reduce using rule 30 (expression -> expression + expression .)
    -               reduce using rule 30 (expression -> expression + expression .)
    >               reduce using rule 30 (expression -> expression + expression .)
    <               reduce using rule 30 (expression -> expression + expression .)
    REL_EQ          reduce using rule 30 (expression -> expression + expression .)
    REL_NEQ         reduce using rule 30 (expression -> expression + expression .)
    REL_GTEQ        reduce using rule 30 (expression -> expression + expression .)
    REL_LTEQ        reduce using rule 30 (expression -> expression + expression .)
    )               reduce using rule 30 (expression -> expression + expression .)
    *               shift and go to state 32
    /               shift and go to state 39

  ! *               [ reduce using rule 30 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 30 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 41 ]
  ! -               [ shift and go to state 37 ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 71

    (39) expression -> expression REL_LTEQ expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               reduce using rule 39 (expression -> expression REL_LTEQ expression .)
    >               reduce using rule 39 (expression -> expression REL_LTEQ expression .)
    <               reduce using rule 39 (expression -> expression REL_LTEQ expression .)
    REL_EQ          reduce using rule 39 (expression -> expression REL_LTEQ expression .)
    REL_NEQ         reduce using rule 39 (expression -> expression REL_LTEQ expression .)
    REL_GTEQ        reduce using rule 39 (expression -> expression REL_LTEQ expression .)
    REL_LTEQ        reduce using rule 39 (expression -> expression REL_LTEQ expression .)
    )               reduce using rule 39 (expression -> expression REL_LTEQ expression .)
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39

  ! +               [ reduce using rule 39 (expression -> expression REL_LTEQ expression .) ]
  ! -               [ reduce using rule 39 (expression -> expression REL_LTEQ expression .) ]
  ! *               [ reduce using rule 39 (expression -> expression REL_LTEQ expression .) ]
  ! /               [ reduce using rule 39 (expression -> expression REL_LTEQ expression .) ]
  ! >               [ shift and go to state 35 ]
  ! <               [ shift and go to state 38 ]
  ! REL_EQ          [ shift and go to state 34 ]
  ! REL_NEQ         [ shift and go to state 36 ]
  ! REL_GTEQ        [ shift and go to state 33 ]
  ! REL_LTEQ        [ shift and go to state 42 ]


state 72

    (24) statement -> FLOAT NAME = . expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 91

state 73

    (20) statement -> FLOAT NAME ; .

    ELSE            reduce using rule 20 (statement -> FLOAT NAME ; .)
    DO              reduce using rule 20 (statement -> FLOAT NAME ; .)
    IF              reduce using rule 20 (statement -> FLOAT NAME ; .)
    INT             reduce using rule 20 (statement -> FLOAT NAME ; .)
    FLOAT           reduce using rule 20 (statement -> FLOAT NAME ; .)
    BOOLEAN         reduce using rule 20 (statement -> FLOAT NAME ; .)
    NAME            reduce using rule 20 (statement -> FLOAT NAME ; .)
    TRUE            reduce using rule 20 (statement -> FLOAT NAME ; .)
    FALSE           reduce using rule 20 (statement -> FLOAT NAME ; .)
    !               reduce using rule 20 (statement -> FLOAT NAME ; .)
    -               reduce using rule 20 (statement -> FLOAT NAME ; .)
    (               reduce using rule 20 (statement -> FLOAT NAME ; .)
    NUMBER          reduce using rule 20 (statement -> FLOAT NAME ; .)
    $end            reduce using rule 20 (statement -> FLOAT NAME ; .)
    }               reduce using rule 20 (statement -> FLOAT NAME ; .)


state 74

    (40) statement -> NAME MINEQ expression . ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               shift and go to state 92
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 75

    (43) statement -> NAME MULEQ expression . ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               shift and go to state 93
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 76

    (41) statement -> NAME PLUSEQ expression . ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               shift and go to state 94
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 77

    (22) statement -> NAME = expression . ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               shift and go to state 95
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 78

    (42) statement -> NAME DIVEQ expression . ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               shift and go to state 96
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 79

    (46) expression -> ( expression ) .

    ;               reduce using rule 46 (expression -> ( expression ) .)
    +               reduce using rule 46 (expression -> ( expression ) .)
    -               reduce using rule 46 (expression -> ( expression ) .)
    *               reduce using rule 46 (expression -> ( expression ) .)
    /               reduce using rule 46 (expression -> ( expression ) .)
    >               reduce using rule 46 (expression -> ( expression ) .)
    <               reduce using rule 46 (expression -> ( expression ) .)
    REL_EQ          reduce using rule 46 (expression -> ( expression ) .)
    REL_NEQ         reduce using rule 46 (expression -> ( expression ) .)
    REL_GTEQ        reduce using rule 46 (expression -> ( expression ) .)
    REL_LTEQ        reduce using rule 46 (expression -> ( expression ) .)
    )               reduce using rule 46 (expression -> ( expression ) .)


state 80

    (17) statement -> IF ( expression . ) { statements } else_if
    (18) statement -> IF ( expression . ) statement else_if
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    )               shift and go to state 97
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 81

    (11) statement -> DO { statements . } WHILE ( expression ) ;
    (9) statements -> statements . statement
    (11) statement -> . DO { statements } WHILE ( expression ) ;
    (17) statement -> . IF ( expression ) { statements } else_if
    (18) statement -> . IF ( expression ) statement else_if
    (19) statement -> . INT NAME ;
    (20) statement -> . FLOAT NAME ;
    (21) statement -> . BOOLEAN NAME ;
    (22) statement -> . NAME = expression ;
    (23) statement -> . INT NAME = expression ;
    (24) statement -> . FLOAT NAME = expression ;
    (25) statement -> . BOOLEAN NAME = TRUE ;
    (26) statement -> . BOOLEAN NAME = FALSE ;
    (27) statement -> . expression ;
    (40) statement -> . NAME MINEQ expression ;
    (41) statement -> . NAME PLUSEQ expression ;
    (42) statement -> . NAME DIVEQ expression ;
    (43) statement -> . NAME MULEQ expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    }               shift and go to state 98
    DO              shift and go to state 22
    IF              shift and go to state 21
    INT             shift and go to state 9
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 13
    NAME            shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16

    expression                     shift and go to state 14
    statement                      shift and go to state 10

state 82

    (6) main_body -> PUBLIC STATIC VOID MAIN . ( STRING ARGS ) { body }

    (               shift and go to state 99


state 83

    (1) start -> PUBLIC CLASS NAME { . main_body }
    (6) main_body -> . PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body }
    (7) main_body -> . body
    (8) body -> . statements
    (9) statements -> . statements statement
    (10) statements -> .

    PUBLIC          shift and go to state 86
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)
    }               reduce using rule 10 (statements -> .)

    body                           shift and go to state 7
    statements                     shift and go to state 1
    main_body                      shift and go to state 100

state 84

    (2) start -> PRIVATE CLASS NAME { . main_body }
    (6) main_body -> . PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body }
    (7) main_body -> . body
    (8) body -> . statements
    (9) statements -> . statements statement
    (10) statements -> .

    PUBLIC          shift and go to state 86
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)
    }               reduce using rule 10 (statements -> .)

    body                           shift and go to state 7
    statements                     shift and go to state 1
    main_body                      shift and go to state 101

state 85

    (4) start -> CLASS NAME { main_body . }

    }               shift and go to state 102


state 86

    (6) main_body -> PUBLIC . STATIC VOID MAIN ( STRING ARGS ) { body }

    STATIC          shift and go to state 23


state 87

    (3) start -> PROTECTED CLASS NAME { . main_body }
    (6) main_body -> . PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body }
    (7) main_body -> . body
    (8) body -> . statements
    (9) statements -> . statements statement
    (10) statements -> .

    PUBLIC          shift and go to state 86
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)
    }               reduce using rule 10 (statements -> .)

    body                           shift and go to state 7
    statements                     shift and go to state 1
    main_body                      shift and go to state 103

state 88

    (23) statement -> INT NAME = expression . ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               shift and go to state 104
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 89

    (25) statement -> BOOLEAN NAME = TRUE . ;

    ;               shift and go to state 105


state 90

    (26) statement -> BOOLEAN NAME = FALSE . ;

    ;               shift and go to state 106


state 91

    (24) statement -> FLOAT NAME = expression . ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    ;               shift and go to state 107
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 92

    (40) statement -> NAME MINEQ expression ; .

    ELSE            reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    DO              reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    IF              reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    INT             reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    FLOAT           reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    BOOLEAN         reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    NAME            reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    TRUE            reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    FALSE           reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    !               reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    -               reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    (               reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    NUMBER          reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    $end            reduce using rule 40 (statement -> NAME MINEQ expression ; .)
    }               reduce using rule 40 (statement -> NAME MINEQ expression ; .)


state 93

    (43) statement -> NAME MULEQ expression ; .

    ELSE            reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    DO              reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    IF              reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    INT             reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    FLOAT           reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    BOOLEAN         reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    NAME            reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    TRUE            reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    FALSE           reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    !               reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    -               reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    (               reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    NUMBER          reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    $end            reduce using rule 43 (statement -> NAME MULEQ expression ; .)
    }               reduce using rule 43 (statement -> NAME MULEQ expression ; .)


state 94

    (41) statement -> NAME PLUSEQ expression ; .

    ELSE            reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    DO              reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    IF              reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    INT             reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    FLOAT           reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    BOOLEAN         reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    NAME            reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    TRUE            reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    FALSE           reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    !               reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    -               reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    (               reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    NUMBER          reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    $end            reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)
    }               reduce using rule 41 (statement -> NAME PLUSEQ expression ; .)


state 95

    (22) statement -> NAME = expression ; .

    ELSE            reduce using rule 22 (statement -> NAME = expression ; .)
    DO              reduce using rule 22 (statement -> NAME = expression ; .)
    IF              reduce using rule 22 (statement -> NAME = expression ; .)
    INT             reduce using rule 22 (statement -> NAME = expression ; .)
    FLOAT           reduce using rule 22 (statement -> NAME = expression ; .)
    BOOLEAN         reduce using rule 22 (statement -> NAME = expression ; .)
    NAME            reduce using rule 22 (statement -> NAME = expression ; .)
    TRUE            reduce using rule 22 (statement -> NAME = expression ; .)
    FALSE           reduce using rule 22 (statement -> NAME = expression ; .)
    !               reduce using rule 22 (statement -> NAME = expression ; .)
    -               reduce using rule 22 (statement -> NAME = expression ; .)
    (               reduce using rule 22 (statement -> NAME = expression ; .)
    NUMBER          reduce using rule 22 (statement -> NAME = expression ; .)
    $end            reduce using rule 22 (statement -> NAME = expression ; .)
    }               reduce using rule 22 (statement -> NAME = expression ; .)


state 96

    (42) statement -> NAME DIVEQ expression ; .

    ELSE            reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    DO              reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    IF              reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    INT             reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    FLOAT           reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    BOOLEAN         reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    NAME            reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    TRUE            reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    FALSE           reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    !               reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    -               reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    (               reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    NUMBER          reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    $end            reduce using rule 42 (statement -> NAME DIVEQ expression ; .)
    }               reduce using rule 42 (statement -> NAME DIVEQ expression ; .)


state 97

    (17) statement -> IF ( expression ) . { statements } else_if
    (18) statement -> IF ( expression ) . statement else_if
    (11) statement -> . DO { statements } WHILE ( expression ) ;
    (17) statement -> . IF ( expression ) { statements } else_if
    (18) statement -> . IF ( expression ) statement else_if
    (19) statement -> . INT NAME ;
    (20) statement -> . FLOAT NAME ;
    (21) statement -> . BOOLEAN NAME ;
    (22) statement -> . NAME = expression ;
    (23) statement -> . INT NAME = expression ;
    (24) statement -> . FLOAT NAME = expression ;
    (25) statement -> . BOOLEAN NAME = TRUE ;
    (26) statement -> . BOOLEAN NAME = FALSE ;
    (27) statement -> . expression ;
    (40) statement -> . NAME MINEQ expression ;
    (41) statement -> . NAME PLUSEQ expression ;
    (42) statement -> . NAME DIVEQ expression ;
    (43) statement -> . NAME MULEQ expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    {               shift and go to state 109
    DO              shift and go to state 22
    IF              shift and go to state 21
    INT             shift and go to state 9
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 13
    NAME            shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16

    expression                     shift and go to state 14
    statement                      shift and go to state 108

state 98

    (11) statement -> DO { statements } . WHILE ( expression ) ;

    WHILE           shift and go to state 110


state 99

    (6) main_body -> PUBLIC STATIC VOID MAIN ( . STRING ARGS ) { body }

    STRING          shift and go to state 111


state 100

    (1) start -> PUBLIC CLASS NAME { main_body . }

    }               shift and go to state 112


state 101

    (2) start -> PRIVATE CLASS NAME { main_body . }

    }               shift and go to state 113


state 102

    (4) start -> CLASS NAME { main_body } .

    $end            reduce using rule 4 (start -> CLASS NAME { main_body } .)


state 103

    (3) start -> PROTECTED CLASS NAME { main_body . }

    }               shift and go to state 114


state 104

    (23) statement -> INT NAME = expression ; .

    ELSE            reduce using rule 23 (statement -> INT NAME = expression ; .)
    DO              reduce using rule 23 (statement -> INT NAME = expression ; .)
    IF              reduce using rule 23 (statement -> INT NAME = expression ; .)
    INT             reduce using rule 23 (statement -> INT NAME = expression ; .)
    FLOAT           reduce using rule 23 (statement -> INT NAME = expression ; .)
    BOOLEAN         reduce using rule 23 (statement -> INT NAME = expression ; .)
    NAME            reduce using rule 23 (statement -> INT NAME = expression ; .)
    TRUE            reduce using rule 23 (statement -> INT NAME = expression ; .)
    FALSE           reduce using rule 23 (statement -> INT NAME = expression ; .)
    !               reduce using rule 23 (statement -> INT NAME = expression ; .)
    -               reduce using rule 23 (statement -> INT NAME = expression ; .)
    (               reduce using rule 23 (statement -> INT NAME = expression ; .)
    NUMBER          reduce using rule 23 (statement -> INT NAME = expression ; .)
    $end            reduce using rule 23 (statement -> INT NAME = expression ; .)
    }               reduce using rule 23 (statement -> INT NAME = expression ; .)


state 105

    (25) statement -> BOOLEAN NAME = TRUE ; .

    ELSE            reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    DO              reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    IF              reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    INT             reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    FLOAT           reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    BOOLEAN         reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    NAME            reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    TRUE            reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    FALSE           reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    !               reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    -               reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    (               reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    NUMBER          reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    $end            reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)
    }               reduce using rule 25 (statement -> BOOLEAN NAME = TRUE ; .)


state 106

    (26) statement -> BOOLEAN NAME = FALSE ; .

    ELSE            reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    DO              reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    IF              reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    INT             reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    FLOAT           reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    BOOLEAN         reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    NAME            reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    TRUE            reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    FALSE           reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    !               reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    -               reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    (               reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    NUMBER          reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    $end            reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)
    }               reduce using rule 26 (statement -> BOOLEAN NAME = FALSE ; .)


state 107

    (24) statement -> FLOAT NAME = expression ; .

    ELSE            reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    DO              reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    IF              reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    INT             reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    FLOAT           reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    BOOLEAN         reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    NAME            reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    TRUE            reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    FALSE           reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    !               reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    -               reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    (               reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    NUMBER          reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    $end            reduce using rule 24 (statement -> FLOAT NAME = expression ; .)
    }               reduce using rule 24 (statement -> FLOAT NAME = expression ; .)


state 108

    (18) statement -> IF ( expression ) statement . else_if
    (12) else_if -> . ELSE IF ( expression ) { statements } else_if
    (13) else_if -> . ELSE IF ( expression ) statement else_if
    (14) else_if -> . ELSE { statements }
    (15) else_if -> . ELSE statement
    (16) else_if -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 115
    DO              reduce using rule 16 (else_if -> .)
    IF              reduce using rule 16 (else_if -> .)
    INT             reduce using rule 16 (else_if -> .)
    FLOAT           reduce using rule 16 (else_if -> .)
    BOOLEAN         reduce using rule 16 (else_if -> .)
    NAME            reduce using rule 16 (else_if -> .)
    TRUE            reduce using rule 16 (else_if -> .)
    FALSE           reduce using rule 16 (else_if -> .)
    !               reduce using rule 16 (else_if -> .)
    -               reduce using rule 16 (else_if -> .)
    (               reduce using rule 16 (else_if -> .)
    NUMBER          reduce using rule 16 (else_if -> .)
    $end            reduce using rule 16 (else_if -> .)
    }               reduce using rule 16 (else_if -> .)

  ! ELSE            [ reduce using rule 16 (else_if -> .) ]

    else_if                        shift and go to state 116

state 109

    (17) statement -> IF ( expression ) { . statements } else_if
    (9) statements -> . statements statement
    (10) statements -> .

    }               reduce using rule 10 (statements -> .)
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)

    statements                     shift and go to state 117

state 110

    (11) statement -> DO { statements } WHILE . ( expression ) ;

    (               shift and go to state 118


state 111

    (6) main_body -> PUBLIC STATIC VOID MAIN ( STRING . ARGS ) { body }

    ARGS            shift and go to state 119


state 112

    (1) start -> PUBLIC CLASS NAME { main_body } .

    $end            reduce using rule 1 (start -> PUBLIC CLASS NAME { main_body } .)


state 113

    (2) start -> PRIVATE CLASS NAME { main_body } .

    $end            reduce using rule 2 (start -> PRIVATE CLASS NAME { main_body } .)


state 114

    (3) start -> PROTECTED CLASS NAME { main_body } .

    $end            reduce using rule 3 (start -> PROTECTED CLASS NAME { main_body } .)


state 115

    (12) else_if -> ELSE . IF ( expression ) { statements } else_if
    (13) else_if -> ELSE . IF ( expression ) statement else_if
    (14) else_if -> ELSE . { statements }
    (15) else_if -> ELSE . statement
    (11) statement -> . DO { statements } WHILE ( expression ) ;
    (17) statement -> . IF ( expression ) { statements } else_if
    (18) statement -> . IF ( expression ) statement else_if
    (19) statement -> . INT NAME ;
    (20) statement -> . FLOAT NAME ;
    (21) statement -> . BOOLEAN NAME ;
    (22) statement -> . NAME = expression ;
    (23) statement -> . INT NAME = expression ;
    (24) statement -> . FLOAT NAME = expression ;
    (25) statement -> . BOOLEAN NAME = TRUE ;
    (26) statement -> . BOOLEAN NAME = FALSE ;
    (27) statement -> . expression ;
    (40) statement -> . NAME MINEQ expression ;
    (41) statement -> . NAME PLUSEQ expression ;
    (42) statement -> . NAME DIVEQ expression ;
    (43) statement -> . NAME MULEQ expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    IF              shift and go to state 120
    {               shift and go to state 122
    DO              shift and go to state 22
    INT             shift and go to state 9
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 13
    NAME            shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16

    expression                     shift and go to state 14
    statement                      shift and go to state 121

state 116

    (18) statement -> IF ( expression ) statement else_if .

    }               reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    DO              reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    IF              reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    INT             reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    FLOAT           reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    BOOLEAN         reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    NAME            reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    TRUE            reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    FALSE           reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    !               reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    -               reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    (               reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    NUMBER          reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    ELSE            reduce using rule 18 (statement -> IF ( expression ) statement else_if .)
    $end            reduce using rule 18 (statement -> IF ( expression ) statement else_if .)


state 117

    (17) statement -> IF ( expression ) { statements . } else_if
    (9) statements -> statements . statement
    (11) statement -> . DO { statements } WHILE ( expression ) ;
    (17) statement -> . IF ( expression ) { statements } else_if
    (18) statement -> . IF ( expression ) statement else_if
    (19) statement -> . INT NAME ;
    (20) statement -> . FLOAT NAME ;
    (21) statement -> . BOOLEAN NAME ;
    (22) statement -> . NAME = expression ;
    (23) statement -> . INT NAME = expression ;
    (24) statement -> . FLOAT NAME = expression ;
    (25) statement -> . BOOLEAN NAME = TRUE ;
    (26) statement -> . BOOLEAN NAME = FALSE ;
    (27) statement -> . expression ;
    (40) statement -> . NAME MINEQ expression ;
    (41) statement -> . NAME PLUSEQ expression ;
    (42) statement -> . NAME DIVEQ expression ;
    (43) statement -> . NAME MULEQ expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    }               shift and go to state 123
    DO              shift and go to state 22
    IF              shift and go to state 21
    INT             shift and go to state 9
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 13
    NAME            shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16

    expression                     shift and go to state 14
    statement                      shift and go to state 10

state 118

    (11) statement -> DO { statements } WHILE ( . expression ) ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 124

state 119

    (6) main_body -> PUBLIC STATIC VOID MAIN ( STRING ARGS . ) { body }

    )               shift and go to state 125


state 120

    (12) else_if -> ELSE IF . ( expression ) { statements } else_if
    (13) else_if -> ELSE IF . ( expression ) statement else_if
    (17) statement -> IF . ( expression ) { statements } else_if
    (18) statement -> IF . ( expression ) statement else_if

    (               shift and go to state 126


state 121

    (15) else_if -> ELSE statement .

    ELSE            reduce using rule 15 (else_if -> ELSE statement .)
    DO              reduce using rule 15 (else_if -> ELSE statement .)
    IF              reduce using rule 15 (else_if -> ELSE statement .)
    INT             reduce using rule 15 (else_if -> ELSE statement .)
    FLOAT           reduce using rule 15 (else_if -> ELSE statement .)
    BOOLEAN         reduce using rule 15 (else_if -> ELSE statement .)
    NAME            reduce using rule 15 (else_if -> ELSE statement .)
    TRUE            reduce using rule 15 (else_if -> ELSE statement .)
    FALSE           reduce using rule 15 (else_if -> ELSE statement .)
    !               reduce using rule 15 (else_if -> ELSE statement .)
    -               reduce using rule 15 (else_if -> ELSE statement .)
    (               reduce using rule 15 (else_if -> ELSE statement .)
    NUMBER          reduce using rule 15 (else_if -> ELSE statement .)
    $end            reduce using rule 15 (else_if -> ELSE statement .)
    }               reduce using rule 15 (else_if -> ELSE statement .)


state 122

    (14) else_if -> ELSE { . statements }
    (9) statements -> . statements statement
    (10) statements -> .

    }               reduce using rule 10 (statements -> .)
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)

    statements                     shift and go to state 127

state 123

    (17) statement -> IF ( expression ) { statements } . else_if
    (12) else_if -> . ELSE IF ( expression ) { statements } else_if
    (13) else_if -> . ELSE IF ( expression ) statement else_if
    (14) else_if -> . ELSE { statements }
    (15) else_if -> . ELSE statement
    (16) else_if -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 115
    DO              reduce using rule 16 (else_if -> .)
    IF              reduce using rule 16 (else_if -> .)
    INT             reduce using rule 16 (else_if -> .)
    FLOAT           reduce using rule 16 (else_if -> .)
    BOOLEAN         reduce using rule 16 (else_if -> .)
    NAME            reduce using rule 16 (else_if -> .)
    TRUE            reduce using rule 16 (else_if -> .)
    FALSE           reduce using rule 16 (else_if -> .)
    !               reduce using rule 16 (else_if -> .)
    -               reduce using rule 16 (else_if -> .)
    (               reduce using rule 16 (else_if -> .)
    NUMBER          reduce using rule 16 (else_if -> .)
    $end            reduce using rule 16 (else_if -> .)
    }               reduce using rule 16 (else_if -> .)

  ! ELSE            [ reduce using rule 16 (else_if -> .) ]

    else_if                        shift and go to state 128

state 124

    (11) statement -> DO { statements } WHILE ( expression . ) ;
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    )               shift and go to state 129
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 125

    (6) main_body -> PUBLIC STATIC VOID MAIN ( STRING ARGS ) . { body }

    {               shift and go to state 130


state 126

    (12) else_if -> ELSE IF ( . expression ) { statements } else_if
    (13) else_if -> ELSE IF ( . expression ) statement else_if
    (17) statement -> IF ( . expression ) { statements } else_if
    (18) statement -> IF ( . expression ) statement else_if
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16
    NAME            shift and go to state 30

    expression                     shift and go to state 131

state 127

    (14) else_if -> ELSE { statements . }
    (9) statements -> statements . statement
    (11) statement -> . DO { statements } WHILE ( expression ) ;
    (17) statement -> . IF ( expression ) { statements } else_if
    (18) statement -> . IF ( expression ) statement else_if
    (19) statement -> . INT NAME ;
    (20) statement -> . FLOAT NAME ;
    (21) statement -> . BOOLEAN NAME ;
    (22) statement -> . NAME = expression ;
    (23) statement -> . INT NAME = expression ;
    (24) statement -> . FLOAT NAME = expression ;
    (25) statement -> . BOOLEAN NAME = TRUE ;
    (26) statement -> . BOOLEAN NAME = FALSE ;
    (27) statement -> . expression ;
    (40) statement -> . NAME MINEQ expression ;
    (41) statement -> . NAME PLUSEQ expression ;
    (42) statement -> . NAME DIVEQ expression ;
    (43) statement -> . NAME MULEQ expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    }               shift and go to state 132
    DO              shift and go to state 22
    IF              shift and go to state 21
    INT             shift and go to state 9
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 13
    NAME            shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16

    expression                     shift and go to state 14
    statement                      shift and go to state 10

state 128

    (17) statement -> IF ( expression ) { statements } else_if .

    }               reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    DO              reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    IF              reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    INT             reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    FLOAT           reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    BOOLEAN         reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    NAME            reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    TRUE            reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    FALSE           reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    !               reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    -               reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    (               reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    NUMBER          reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    ELSE            reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)
    $end            reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .)


state 129

    (11) statement -> DO { statements } WHILE ( expression ) . ;

    ;               shift and go to state 133


state 130

    (6) main_body -> PUBLIC STATIC VOID MAIN ( STRING ARGS ) { . body }
    (8) body -> . statements
    (9) statements -> . statements statement
    (10) statements -> .

    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)
    }               reduce using rule 10 (statements -> .)

    body                           shift and go to state 134
    statements                     shift and go to state 1

state 131

    (12) else_if -> ELSE IF ( expression . ) { statements } else_if
    (13) else_if -> ELSE IF ( expression . ) statement else_if
    (17) statement -> IF ( expression . ) { statements } else_if
    (18) statement -> IF ( expression . ) statement else_if
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . > expression
    (35) expression -> expression . < expression
    (36) expression -> expression . REL_EQ expression
    (37) expression -> expression . REL_NEQ expression
    (38) expression -> expression . REL_GTEQ expression
    (39) expression -> expression . REL_LTEQ expression

    )               shift and go to state 135
    +               shift and go to state 41
    -               shift and go to state 37
    *               shift and go to state 32
    /               shift and go to state 39
    >               shift and go to state 35
    <               shift and go to state 38
    REL_EQ          shift and go to state 34
    REL_NEQ         shift and go to state 36
    REL_GTEQ        shift and go to state 33
    REL_LTEQ        shift and go to state 42


state 132

    (14) else_if -> ELSE { statements } .

    ELSE            reduce using rule 14 (else_if -> ELSE { statements } .)
    DO              reduce using rule 14 (else_if -> ELSE { statements } .)
    IF              reduce using rule 14 (else_if -> ELSE { statements } .)
    INT             reduce using rule 14 (else_if -> ELSE { statements } .)
    FLOAT           reduce using rule 14 (else_if -> ELSE { statements } .)
    BOOLEAN         reduce using rule 14 (else_if -> ELSE { statements } .)
    NAME            reduce using rule 14 (else_if -> ELSE { statements } .)
    TRUE            reduce using rule 14 (else_if -> ELSE { statements } .)
    FALSE           reduce using rule 14 (else_if -> ELSE { statements } .)
    !               reduce using rule 14 (else_if -> ELSE { statements } .)
    -               reduce using rule 14 (else_if -> ELSE { statements } .)
    (               reduce using rule 14 (else_if -> ELSE { statements } .)
    NUMBER          reduce using rule 14 (else_if -> ELSE { statements } .)
    $end            reduce using rule 14 (else_if -> ELSE { statements } .)
    }               reduce using rule 14 (else_if -> ELSE { statements } .)


state 133

    (11) statement -> DO { statements } WHILE ( expression ) ; .

    ELSE            reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    DO              reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    IF              reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    INT             reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    FLOAT           reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    BOOLEAN         reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    NAME            reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    TRUE            reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    FALSE           reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    !               reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    -               reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    (               reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    NUMBER          reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    $end            reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)
    }               reduce using rule 11 (statement -> DO { statements } WHILE ( expression ) ; .)


state 134

    (6) main_body -> PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body . }

    }               shift and go to state 136


state 135

    (12) else_if -> ELSE IF ( expression ) . { statements } else_if
    (13) else_if -> ELSE IF ( expression ) . statement else_if
    (17) statement -> IF ( expression ) . { statements } else_if
    (18) statement -> IF ( expression ) . statement else_if
    (11) statement -> . DO { statements } WHILE ( expression ) ;
    (17) statement -> . IF ( expression ) { statements } else_if
    (18) statement -> . IF ( expression ) statement else_if
    (19) statement -> . INT NAME ;
    (20) statement -> . FLOAT NAME ;
    (21) statement -> . BOOLEAN NAME ;
    (22) statement -> . NAME = expression ;
    (23) statement -> . INT NAME = expression ;
    (24) statement -> . FLOAT NAME = expression ;
    (25) statement -> . BOOLEAN NAME = TRUE ;
    (26) statement -> . BOOLEAN NAME = FALSE ;
    (27) statement -> . expression ;
    (40) statement -> . NAME MINEQ expression ;
    (41) statement -> . NAME PLUSEQ expression ;
    (42) statement -> . NAME DIVEQ expression ;
    (43) statement -> . NAME MULEQ expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    {               shift and go to state 138
    DO              shift and go to state 22
    IF              shift and go to state 21
    INT             shift and go to state 9
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 13
    NAME            shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16

    expression                     shift and go to state 14
    statement                      shift and go to state 137

state 136

    (6) main_body -> PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body } .

    }               reduce using rule 6 (main_body -> PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body } .)
    $end            reduce using rule 6 (main_body -> PUBLIC STATIC VOID MAIN ( STRING ARGS ) { body } .)


state 137

    (13) else_if -> ELSE IF ( expression ) statement . else_if
    (18) statement -> IF ( expression ) statement . else_if
    (12) else_if -> . ELSE IF ( expression ) { statements } else_if
    (13) else_if -> . ELSE IF ( expression ) statement else_if
    (14) else_if -> . ELSE { statements }
    (15) else_if -> . ELSE statement
    (16) else_if -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 115
    DO              reduce using rule 16 (else_if -> .)
    IF              reduce using rule 16 (else_if -> .)
    INT             reduce using rule 16 (else_if -> .)
    FLOAT           reduce using rule 16 (else_if -> .)
    BOOLEAN         reduce using rule 16 (else_if -> .)
    NAME            reduce using rule 16 (else_if -> .)
    TRUE            reduce using rule 16 (else_if -> .)
    FALSE           reduce using rule 16 (else_if -> .)
    !               reduce using rule 16 (else_if -> .)
    -               reduce using rule 16 (else_if -> .)
    (               reduce using rule 16 (else_if -> .)
    NUMBER          reduce using rule 16 (else_if -> .)
    $end            reduce using rule 16 (else_if -> .)
    }               reduce using rule 16 (else_if -> .)

  ! ELSE            [ reduce using rule 16 (else_if -> .) ]

    else_if                        shift and go to state 139

state 138

    (12) else_if -> ELSE IF ( expression ) { . statements } else_if
    (17) statement -> IF ( expression ) { . statements } else_if
    (9) statements -> . statements statement
    (10) statements -> .

    }               reduce using rule 10 (statements -> .)
    DO              reduce using rule 10 (statements -> .)
    IF              reduce using rule 10 (statements -> .)
    INT             reduce using rule 10 (statements -> .)
    FLOAT           reduce using rule 10 (statements -> .)
    BOOLEAN         reduce using rule 10 (statements -> .)
    NAME            reduce using rule 10 (statements -> .)
    TRUE            reduce using rule 10 (statements -> .)
    FALSE           reduce using rule 10 (statements -> .)
    !               reduce using rule 10 (statements -> .)
    -               reduce using rule 10 (statements -> .)
    (               reduce using rule 10 (statements -> .)
    NUMBER          reduce using rule 10 (statements -> .)

    statements                     shift and go to state 140

state 139

    (13) else_if -> ELSE IF ( expression ) statement else_if .
    (18) statement -> IF ( expression ) statement else_if .

  ! reduce/reduce conflict for ELSE resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for DO resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for IF resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for INT resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for FLOAT resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for NAME resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for TRUE resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for FALSE resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for ! resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for - resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for ( resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for NUMBER resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for $end resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
  ! reduce/reduce conflict for } resolved using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    ELSE            reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    DO              reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    IF              reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    INT             reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    FLOAT           reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    BOOLEAN         reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    NAME            reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    TRUE            reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    FALSE           reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    !               reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    -               reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    (               reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    NUMBER          reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    $end            reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)
    }               reduce using rule 13 (else_if -> ELSE IF ( expression ) statement else_if .)

  ! ELSE            [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! DO              [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! IF              [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! INT             [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! FLOAT           [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! BOOLEAN         [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! NAME            [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! TRUE            [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! FALSE           [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! !               [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! -               [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! (               [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! NUMBER          [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! $end            [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]
  ! }               [ reduce using rule 18 (statement -> IF ( expression ) statement else_if .) ]


state 140

    (12) else_if -> ELSE IF ( expression ) { statements . } else_if
    (17) statement -> IF ( expression ) { statements . } else_if
    (9) statements -> statements . statement
    (11) statement -> . DO { statements } WHILE ( expression ) ;
    (17) statement -> . IF ( expression ) { statements } else_if
    (18) statement -> . IF ( expression ) statement else_if
    (19) statement -> . INT NAME ;
    (20) statement -> . FLOAT NAME ;
    (21) statement -> . BOOLEAN NAME ;
    (22) statement -> . NAME = expression ;
    (23) statement -> . INT NAME = expression ;
    (24) statement -> . FLOAT NAME = expression ;
    (25) statement -> . BOOLEAN NAME = TRUE ;
    (26) statement -> . BOOLEAN NAME = FALSE ;
    (27) statement -> . expression ;
    (40) statement -> . NAME MINEQ expression ;
    (41) statement -> . NAME PLUSEQ expression ;
    (42) statement -> . NAME DIVEQ expression ;
    (43) statement -> . NAME MULEQ expression ;
    (28) expression -> . TRUE
    (29) expression -> . FALSE
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression > expression
    (35) expression -> . expression < expression
    (36) expression -> . expression REL_EQ expression
    (37) expression -> . expression REL_NEQ expression
    (38) expression -> . expression REL_GTEQ expression
    (39) expression -> . expression REL_LTEQ expression
    (44) expression -> . ! expression
    (45) expression -> . - expression
    (46) expression -> . ( expression )
    (47) expression -> . NUMBER
    (48) expression -> . NAME

    }               shift and go to state 141
    DO              shift and go to state 22
    IF              shift and go to state 21
    INT             shift and go to state 9
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 13
    NAME            shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 12
    !               shift and go to state 17
    -               shift and go to state 11
    (               shift and go to state 19
    NUMBER          shift and go to state 16

    expression                     shift and go to state 14
    statement                      shift and go to state 10

state 141

    (12) else_if -> ELSE IF ( expression ) { statements } . else_if
    (17) statement -> IF ( expression ) { statements } . else_if
    (12) else_if -> . ELSE IF ( expression ) { statements } else_if
    (13) else_if -> . ELSE IF ( expression ) statement else_if
    (14) else_if -> . ELSE { statements }
    (15) else_if -> . ELSE statement
    (16) else_if -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 115
    DO              reduce using rule 16 (else_if -> .)
    IF              reduce using rule 16 (else_if -> .)
    INT             reduce using rule 16 (else_if -> .)
    FLOAT           reduce using rule 16 (else_if -> .)
    BOOLEAN         reduce using rule 16 (else_if -> .)
    NAME            reduce using rule 16 (else_if -> .)
    TRUE            reduce using rule 16 (else_if -> .)
    FALSE           reduce using rule 16 (else_if -> .)
    !               reduce using rule 16 (else_if -> .)
    -               reduce using rule 16 (else_if -> .)
    (               reduce using rule 16 (else_if -> .)
    NUMBER          reduce using rule 16 (else_if -> .)
    $end            reduce using rule 16 (else_if -> .)
    }               reduce using rule 16 (else_if -> .)

  ! ELSE            [ reduce using rule 16 (else_if -> .) ]

    else_if                        shift and go to state 142

state 142

    (12) else_if -> ELSE IF ( expression ) { statements } else_if .
    (17) statement -> IF ( expression ) { statements } else_if .

  ! reduce/reduce conflict for ELSE resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for DO resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for IF resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for INT resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for NAME resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for ! resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for - resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for ( resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for $end resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
  ! reduce/reduce conflict for } resolved using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    ELSE            reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    DO              reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    IF              reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    INT             reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    FLOAT           reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    BOOLEAN         reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    NAME            reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    TRUE            reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    FALSE           reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    !               reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    -               reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    (               reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    NUMBER          reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    $end            reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)
    }               reduce using rule 12 (else_if -> ELSE IF ( expression ) { statements } else_if .)

  ! ELSE            [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! DO              [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! IF              [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! INT             [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! FLOAT           [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! BOOLEAN         [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! NAME            [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! TRUE            [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! FALSE           [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! !               [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! -               [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! (               [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! NUMBER          [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! $end            [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]
  ! }               [ reduce using rule 17 (statement -> IF ( expression ) { statements } else_if .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 108 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 123 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 137 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 141 resolved as shift
WARNING: reduce/reduce conflict in state 139 resolved using rule (else_if -> ELSE IF ( expression ) statement else_if)
WARNING: rejected rule (statement -> IF ( expression ) statement else_if) in state 139
WARNING: reduce/reduce conflict in state 142 resolved using rule (else_if -> ELSE IF ( expression ) { statements } else_if)
WARNING: rejected rule (statement -> IF ( expression ) { statements } else_if) in state 142
